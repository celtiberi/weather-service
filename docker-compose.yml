version: '3.3'

services:
  elk:
    image: sebp/elk
    ports:
      - "5601:5601"
      - "9200:9200"
      - "5044:5044"
    networks:
      - weather

  krakend:
    image: devopsfaith/krakend
    ports:
      - "8080:8080"
    volumes:
      - ./krakend.json:/etc/krakend/krakend.json
    networks:
      - weather

  mongodb:
    image: mongo
    container_name: mongodb
    restart: always
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - weather

  rabbitmq:
    image: rabbitmq:3.11-management
    container_name: rabbitmq
    restart: always
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - ./rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf
      - ./definitions.json:/etc/rabbitmq/definitions.json
    healthcheck:
      test: rabbitmq-diagnostics check_port_connectivity
      interval: 1s
      timeout: 3s
      retries: 30
    networks:
      - weather

  boat-api:
    build: 
      context: ./boat-api      
    image: docker.io/celtiberi/boat-api:latest
    container_name: boat-api
    restart: always
    ports:
      - "3050:3000"
    depends_on:
      rabbitmq:
        condition: service_healthy
      mongodb:
        condition: service_healthy
    environment:
      RABBITMQ_URL: amqp://sailor:sailor@rabbitmq:5672
      MONGODB_URI: mongodb://mongodb:27017/boats
      LOGSTASH_HOST: localhost
      LOGSTASH_PORT: 5044
    networks:
      - weather

  point-forecast-service:
    build: 
      context: ./point-forecast-service
    image: docker.io/celtiberi/point-forecast-service:latest
    container_name: point-forecast-service
    restart: always
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      RABBITMQ_URL: amqp://sailor:sailor@rabbitmq:5672
      LOGSTASH_HOST: localhost
      LOGSTASH_PORT: 5044
    networks:
      - weather

  weather-api:
    build: 
      context: ./weather-api      
    image: docker.io/celtiberi/weather-api:latest
    container_name: weather-api
    restart: always
    ports:
      - "3100:3100"
    depends_on:
      point-forecast-service:
        condition: service_started
      rabbitmq:
        condition: service_healthy
      mongodb:
        condition: service_healthy
    environment:
      RABBITMQ_URL: amqp://sailor:sailor@rabbitmq:5672
      MONGODB_URI: mongodb://mongodb:27017/boats
      LOGSTASH_HOST: localhost
      LOGSTASH_PORT: 5044
    networks:
      - weather

  grib-downloader:
    build: 
      context: ./grib-downloader
    image: docker.io/celtiberi/grib-downloader:latest
    container_name: grib-downloader
    restart: always
    ports:
      - "9231:9229"
    volumes:
      - grib_data:/app/grib_files
    depends_on:
      rabbitmq:
        condition: service_healthy
      mongodb:
        condition: service_healthy
    environment:
      MONGODB_URI: mongodb://mongodb:27017/boats
      RABBITMQ_URL: amqp://sailor:sailor@rabbitmq:5672
      LOGSTASH_HOST: localhost
      LOGSTASH_PORT: 5044
    networks:
      - weather

volumes:
  mongodb_data:
  rabbitmq_data:
  grib_data:
  grafana_data:

networks:
  weather:
    driver: bridge