version: '3'

services:
  mongodb:
    image: mongo
    container_name: mongodb
    restart: always
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - docker-elk_elk    

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    restart: always
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: admin
      RABBITMQ_DEFAULT_PASS: password
    healthcheck:
      test: rabbitmq-diagnostics check_port_connectivity
      interval: 1s
      timeout: 3s
      retries: 30
    networks:
      - docker-elk_elk      

  point-forecast-service:
    build: ./point-forecast-service
    container_name: point-forecast-service
    restart: always
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      RABBITMQ_URL: amqp://admin:password@rabbitmq:5672
      LOGSTASH_HOST: localhost
      LOGSTASH_PORT: ${LOGSTASH_PORT}    
    networks:
      - docker-elk_elk
      
  boat-service:
    build: ./boat-service
    container_name: boat-service
    restart: always
    ports:
      - "3010:3000"
      - "9230:9229" # debug port
    depends_on:
      rabbitmq:
        condition: service_healthy
      mongodb: 
        condition: service_healthy
    environment:
      MONGODB_URI: mongodb://mongodb:27017/boats
      LOGSTASH_HOST: localhost      
      LOGSTASH_PORT: ${LOGSTASH_PORT}
    networks:
      - docker-elk_elk    

  grib-downloader:
    build: ./grib-downloader
    container_name: grib-downloader
    restart: always
    ports:
      - "9231:9229" # map the debug port to the host machine
    volumes:
      - grib_data:/app/grib_files
    depends_on:
      rabbitmq:
        condition: service_healthy
      mongodb: 
        condition: service_healthy
    environment:
      MONGODB_URI: mongodb://mongodb:27017/boats
      RABBITMQ_URL: amqp://admin:password@rabbitmq:5672
      LOGSTASH_HOST: localhost
      LOGSTASH_PORT: ${LOGSTASH_PORT}    
    networks:
      - docker-elk_elk
  

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    restart: always
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    networks:
      - docker-elk_elk    

  grafana:
    image: grafana/grafana
    container_name: grafana
    restart: always
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
    networks:
      - docker-elk_elk    

volumes:
  mongodb_data:
  rabbitmq_data:
  grib_data:
  grafana_data:

networks:
  docker-elk_elk:
    external: true