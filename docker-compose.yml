services:

  boat-api:
    build: 
      context: .
      dockerfile: ./boat-api/Dockerfile
    image: docker.io/celtiberi/boat-api:latest
    container_name: boat-api
    restart: always
    ports: 
      - "3050:3000"
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      RABBITMQ_URL: amqp://sailor:sailor@rabbitmq:5672
      MONGODB_URI: /run/secrets/mongodb_uri
      LOGSTASH_HOST: localhost
      LOGSTASH_PORT: 5044
    secrets:
      - mongodb_uri
    volumes:
      - ./shared:/app/../shared
    networks:
      - weather

  # elk:
  #   image: sebp/elk
  #   ports:
  #     - "5601:5601"
  #     - "9200:9200"
  #     - "5044:5044"
  #   networks:
  #     - weather

  grib-downloader:
    build: 
      context: .
      dockerfile: ./grib-downloader/Dockerfile
    image: docker.io/celtiberi/grib-downloader:latest
    container_name: grib-downloader
    restart: always
    ports:
      - "9231:9229"
    volumes:
      - grib_data:/app/grib_files
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      MONGODB_URI: /run/secrets/mongodb_uri
      RABBITMQ_URL: amqp://sailor:sailor@rabbitmq:5672
      LOGSTASH_HOST: localhost
      LOGSTASH_PORT: 5044
    secrets:
      - mongodb_uri
    networks:
      - weather

  krakend:
    image: devopsfaith/krakend
    ports:
      - "8080:8080"
    volumes:
      - ./krakend.json:/etc/krakend/krakend.json
    networks:
      - weather

  nws-forecast-service:
    build: 
      context: .
      dockerfile: ./nws-forecast-service/Dockerfile
    image: docker.io/celtiberi/nws-forecast-service:latest
    container_name: nws-forecast-service
    restart: always
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      RABBITMQ_URL: amqp://sailor:sailor@rabbitmq:5672
      MONGODB_URI: /run/secrets/mongodb_uri
      LOGSTASH_HOST: localhost
      LOGSTASH_PORT: 5044
    secrets:
      - mongodb_uri
    volumes:
      - ./shared:/app/../shared
    networks:
      - weather

  rabbitmq:
    image: rabbitmq:3.11-management
    container_name: rabbitmq
    restart: always
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - ./rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf
      - ./definitions.json:/etc/rabbitmq/definitions.json
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "check_port_connectivity"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - weather

  weather-api:
    build: 
      context: .
      dockerfile: ./weather-api/Dockerfile
    image: docker.io/celtiberi/weather-api:latest
    container_name: weather-api
    restart: always
    ports:
      - "3100:3100"
    depends_on:
      nws-forecast-service:
        condition: service_started
      rabbitmq:
        condition: service_healthy
    environment:
      RABBITMQ_URL: amqp://sailor:sailor@rabbitmq:5672
      MONGODB_URI: /run/secrets/mongodb_uri
      LOGSTASH_HOST: localhost
      LOGSTASH_PORT: 5044
      ANTHROPIC_API_KEY: /run/secrets/anthropic_api_key
    secrets:
      - mongodb_uri
      - anthropic_api_key
    volumes:
      - ./shared:/app/../shared
    networks:
      - weather

  weather-web:
    build: 
      context: ./weather-web     
    image: docker.io/celtiberi/weather-web:latest
    container_name: weather-web
    restart: always
    ports:
      - "3000:3000"
    depends_on:
      weather-api:
        condition: service_started
    environment:
      ANTHROPIC_API_KEY: /run/secrets/anthropic_api_key
    secrets:
      - anthropic_api_key
    volumes:
      - ./shared:/app/../shared
    networks:
      - weather

  mongodb:
    image: mongo:latest
    container_name: mongodb
    restart: always
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - ./init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    command: mongod --noauth
    networks:
      - weather

      
volumes:  
  rabbitmq_data:
  grib_data:
  # grafana_data:
  mongodb_data:

networks:
  weather:
    driver: bridge
  
secrets:
  mongodb_uri:
    file: ./secrets/mongodb_uri.txt
  anthropic_api_key:
    file: ./secrets/anthropic_api_key.txt