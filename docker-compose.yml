version: '3'

services:
  mongodb:
    image: mongo
    container_name: mongodb
    restart: always
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    restart: always
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: admin
      RABBITMQ_DEFAULT_PASS: password

  boat-service:
    build: ./boat-service
    container_name: boat-service
    restart: always
    ports:
      - "3000:3000"
    depends_on:
      - mongodb
      - rabbitmq
    environment:
      MONGODB_URI: mongodb://mongodb:27017/weather-service

  grib-downloader:
    build: ./grib-downloader
    container_name: grib-downloader
    restart: always
    volumes:
      - grib_data:/app/grib_files

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    restart: always
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"

  grafana:
    image: grafana/grafana
    container_name: grafana
    restart: always
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana

  elasticsearch:
    image: elasticsearch:7.13.0
    container_name: elasticsearch
    restart: always
    environment:
      - discovery.type=single-node
    ports:
      - "9200:9200"
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data

  logstash:
    image: logstash:7.13.0
    container_name: logstash
    restart: always
    volumes:
      - ./logstash.conf:/usr/share/logstash/pipeline/logstash.conf
    depends_on:
      - elasticsearch

  kibana:
    image: kibana:7.13.0
    container_name: kibana
    restart: always
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch

volumes:
  mongodb_data:
  rabbitmq_data:
  grib_data:
  grafana_data:
  elasticsearch_data: